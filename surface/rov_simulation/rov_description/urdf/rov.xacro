<?xml version="1.0" encoding="UTF-8"?>
 <robot name="rov" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
    <!-- soontm https://github.com/clydemcqueen/bluerov2_ignition/ -->

      <xacro:arg name="params_path" default=""/> 
      <!-- Need argument to get from launch file -->
      <xacro:property name="params_path" value="$(arg params_path)"/> 
      <!-- Need seperate property for xacro inorder processing -->
      <xacro:property name="params" value="${load_yaml(params_path)}"/> 
      <!-- Read in the yaml dict as mp (short for model parameters) -->

      <xacro:property name="rov_description" value="${params['rov_description']}"/>
      <xacro:property name="motor_properties" value="${rov_description['motor']}"/>
      
      <xacro:property name="width" value="${rov_description['width']}"/>
      <xacro:property name="length" value="${rov_description['length']}"/>
      <xacro:property name="height" value="${rov_description['height']}"/>

      <xacro:property name="motor_radius" value="${motor_properties['dimension']['radius']}"/>
      <xacro:property name="motor_height" value="${motor_properties['dimension']['height']}"/>


        <link name="base_link">
            <!-- no basis-->
            <inertial>
                <mass value="136.382"/>
                <inertia ixx="1e-3" ixy="0" ixz="0" iyy="1e-3" iyz="0" izz="1e-3" />
            </inertial>

            <visual>
                <origin rpy="0 0 0" xyz="0.0 0.0 0"/>
                <geometry>
                    <mesh filename="file://$(find rov_description)/meshes/rov.stl"/>
                </geometry>
                <material name="blue" >
                    <color rgba="0 0 1 1" />
                </material>
            </visual>

            <collision>
                <geometry>
                <!-- Rough dimensions of rov-->
                    <box size="${width} ${height} ${length}" />
                </geometry>
                <!-- no basis-->
            </collision>

        </link>

        <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
        <xacro:property name="height3" value="0.05" /> <!-- Size of square 'camera' box -->
        <xacro:property name="axel_offset" value="0.05" /> <!-- Size of square 'camera' box -->

        <joint name="camera_joint" type="fixed">
          <axis xyz="0 1 0" />
          <origin xyz="${camera_link} 0 ${height3 - axel_offset*2}" rpy="0 0 0"/>
          <parent link="base_link"/>
          <child link="camera_link"/>
        </joint>

      <!-- Camera -->
      <link name="camera_link">
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
        <box size="${camera_link} ${camera_link} ${camera_link}"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
        <box size="${camera_link} ${camera_link} ${camera_link}"/>
          </geometry>
          <material name="red"/>
        </visual>

        <inertial>
          <mass value="1e-5" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
      </link>

      <!-- camera 
      <gazebo reference="camera_link">
        <sensor type="camera" name="front">
          <update_rate>30.0</update_rate>
          <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>800</width>
              <height>800</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
               Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. 
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>rov/front</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
        </sensor>
      </gazebo>
      -->
</robot>

